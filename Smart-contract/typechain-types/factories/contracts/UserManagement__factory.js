"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserManagement__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "OwnableInvalidOwner",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "OwnableUnauthorizedAccount",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "URI",
                type: "string",
            },
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "setUserURI",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "userURIs",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610a25806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636ed651501461005c578063715018a6146100785780638da5cb5b14610082578063f2fde38b146100a0578063f6379c40146100bc575b600080fd5b610076600480360381019061007191906105b3565b6100ec565b005b610080610145565b005b61008a610159565b604051610097919061061e565b60405180910390f35b6100ba60048036038101906100b59190610639565b610182565b005b6100d660048036038101906100d19190610639565b610208565b6040516100e391906106e5565b60405180910390f35b6100f46102a8565b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081610140919061091d565b505050565b61014d6102a8565b610157600061032f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61018a6102a8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101fc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101f3919061061e565b60405180910390fd5b6102058161032f565b50565b6001602052806000526040600020600091509050805461022790610736565b80601f016020809104026020016040519081016040528092919081815260200182805461025390610736565b80156102a05780601f10610275576101008083540402835291602001916102a0565b820191906000526020600020905b81548152906001019060200180831161028357829003601f168201915b505050505081565b6102b06103f3565b73ffffffffffffffffffffffffffffffffffffffff166102ce610159565b73ffffffffffffffffffffffffffffffffffffffff161461032d576102f16103f3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610324919061061e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61046282610419565b810181811067ffffffffffffffff821117156104815761048061042a565b5b80604052505050565b60006104946103fb565b90506104a08282610459565b919050565b600067ffffffffffffffff8211156104c0576104bf61042a565b5b6104c982610419565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b61048a565b90508281526020810184848401111561051457610513610414565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b61040f565b5b813561054c8482602086016104e5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058082610555565b9050919050565b61059081610575565b811461059b57600080fd5b50565b6000813590506105ad81610587565b92915050565b600080604083850312156105ca576105c9610405565b5b600083013567ffffffffffffffff8111156105e8576105e761040a565b5b6105f485828601610527565b92505060206106058582860161059e565b9150509250929050565b61061881610575565b82525050565b6000602082019050610633600083018461060f565b92915050565b60006020828403121561064f5761064e610405565b5b600061065d8482850161059e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106a0578082015181840152602081019050610685565b60008484015250505050565b60006106b782610666565b6106c18185610671565b93506106d1818560208601610682565b6106da81610419565b840191505092915050565b600060208201905081810360008301526106ff81846106ac565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061074e57607f821691505b60208210810361076157610760610707565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107c97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261078c565b6107d3868361078c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061081a610815610810846107eb565b6107f5565b6107eb565b9050919050565b6000819050919050565b610834836107ff565b61084861084082610821565b848454610799565b825550505050565b600090565b61085d610850565b61086881848461082b565b505050565b5b8181101561088c57610881600082610855565b60018101905061086e565b5050565b601f8211156108d1576108a281610767565b6108ab8461077c565b810160208510156108ba578190505b6108ce6108c68561077c565b83018261086d565b50505b505050565b600082821c905092915050565b60006108f4600019846008026108d6565b1980831691505092915050565b600061090d83836108e3565b9150826002028217905092915050565b61092682610666565b67ffffffffffffffff81111561093f5761093e61042a565b5b6109498254610736565b610954828285610890565b600060209050601f8311600181146109875760008415610975578287015190505b61097f8582610901565b8655506109e7565b601f19841661099586610767565b60005b828110156109bd57848901518255600182019150602085019450602081019050610998565b868310156109da57848901516109d6601f8916826108e3565b8355505b6001600288020188555050505b50505050505056fea26469706673582212205444bdf30b31824753c9252d947fe6ef824c4b07d3d8e154afe8c18ea3f116ee64736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class UserManagement__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.UserManagement__factory = UserManagement__factory;
UserManagement__factory.bytecode = _bytecode;
UserManagement__factory.abi = _abi;
