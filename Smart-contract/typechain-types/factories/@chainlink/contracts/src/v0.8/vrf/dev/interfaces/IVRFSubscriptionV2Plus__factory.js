"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IVRFSubscriptionV2Plus__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
        ],
        name: "acceptSubscriptionOwnerTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "consumer",
                type: "address",
            },
        ],
        name: "addConsumer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "cancelSubscription",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "createSubscription",
        outputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
        ],
        name: "fundSubscriptionWithNative",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "startIndex",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxCount",
                type: "uint256",
            },
        ],
        name: "getActiveSubscriptionIds",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
        ],
        name: "getSubscription",
        outputs: [
            {
                internalType: "uint96",
                name: "balance",
                type: "uint96",
            },
            {
                internalType: "uint96",
                name: "nativeBalance",
                type: "uint96",
            },
            {
                internalType: "uint64",
                name: "reqCount",
                type: "uint64",
            },
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address[]",
                name: "consumers",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
        ],
        name: "pendingRequestExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "consumer",
                type: "address",
            },
        ],
        name: "removeConsumer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "subId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "requestSubscriptionOwnerTransfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IVRFSubscriptionV2Plus__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IVRFSubscriptionV2Plus__factory = IVRFSubscriptionV2Plus__factory;
IVRFSubscriptionV2Plus__factory.abi = _abi;
