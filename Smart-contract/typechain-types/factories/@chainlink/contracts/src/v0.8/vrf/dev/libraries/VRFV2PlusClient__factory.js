"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VRFV2PlusClient__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "EXTRA_ARGS_V1_TAG",
        outputs: [
            {
                internalType: "bytes4",
                name: "",
                type: "bytes4",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60fe610052600b82828239805160001a607314610045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f7514ab4146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa81565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220390c4bab3a030e01b5479d3b0f2c5b193a4e353b09199adc0bf51b4443acdf5d64736f6c63430008180033";
const isSuperArgs = (xs) => xs.length > 1;
class VRFV2PlusClient__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.VRFV2PlusClient__factory = VRFV2PlusClient__factory;
VRFV2PlusClient__factory.bytecode = _bytecode;
VRFV2PlusClient__factory.abi = _abi;
